stages: 
  # - testDeploy
  - loginDocker
  - test
  - build_image
  - deploy_image


before_script:
  # 测试docker是否正常启动
  - whoami
  - docker info

loginDocker:

  stage: loginDocker
  script:
    - docker login -u="catone" -p="u6xrMcM4"

redisTest:
  stage: test
  script:
    - echo redisTest
  when: always

mysqlTest:
  stage: test
  script:
    - echo mysqlTest
  when: always

freeFileServerEnd:
  stage: test
  script:
    - echo freeFileServerEnd
  when: always

pyTest:
  stage: test
  script:
    - echo pyTest
  when: always

# test:
#   stage: testDeploy
#   script:
#     - 


build:
  stage: build_image
  script:
    # 重新构建docker_image
    - docker build -t="catone/freefile:test" -f ./server/Dockerfile ./server/Dockerfile.
  dependencies:
    - pyTest
  
  when: always

pre_deploy:
  # push到hub.docker 远端用于部署
  stage: deploy_image
  script: 
    - docker push catone/freefile:test
  dependencies:
    - loginDocker
  when: on_success
  only:
    - dev

after_script:

  - docker run -d -P catone/freefile:test




