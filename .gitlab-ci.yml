stages: 
  # - testDeploy
  - loginDocker
  - pre_build
  - deployTest
  - test
  - cleanTest
  - build_image
  - deploy_image


before_script:
  # 测试docker是否正常启动
  - whoami
  - docker info

loginDocker:

  stage: loginDocker
  script:
    - docker login -u="catone" -p="u6xrMcM4"
  retry: 2

pre_build:
  stage: pre_build
  script:
    # 重新构建docker_image
    - docker build -t="catone/freefile:pre_build" -f ./server/Dockerfile ./server/
  when: always


redisTest:
  stage: deployTest
  script:
    - docker run -d redis:latest
  when: always

mysqlTest:
  stage: deployTest
  script:
    - docker run -d mysql:latest
  when: always

freeFileServerEnd:
  stage: deployTest
  script:
    - echo freeFileServerEnd
  when: always

pyTest:
  stage: test
  script:
    - echo pyTest
  when: always

cleaner:
  stage: cleanTest
  script:
    - echo cleanTestEnv


build:
  stage: build_image
  script:
    # 重新构建docker_image
    - docker build -t="catone/freefile:test" -f ./server/Dockerfile ./server/
  dependencies:
    - pyTest  
  when: always

pre_deploy:
  # push到hub.docker 远端用于部署
  stage: deploy_image
  script: 
    - docker push catone/freefile:test
  dependencies:
    - loginDocker
  when: on_success
  only:
    - dev

